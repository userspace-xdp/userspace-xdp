; ModuleID = '.llvm_ir/xdp_hash_sum.bpf.ll'
source_filename = "bpf-jit"

; Function Attrs: nofree norecurse nosync nounwind
define i64 @bpf_main(ptr nocapture readonly %0, i64 %1) local_unnamed_addr #0 {
setupBlock:
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load i64, ptr %2, align 4
  %4 = load i64, ptr %0, align 4
  %5 = add i64 %4, 14
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %bb_inst_257, label %bb_inst_6

bb_inst_6:                                        ; preds = %setupBlock
  %7 = inttoptr i64 %4 to ptr
  %8 = getelementptr i8, ptr %7, i64 12
  %9 = load i16, ptr %8, align 2
  %.not = icmp ne i16 %9, 8
  %10 = add i64 %4, 34
  %11 = icmp ugt i64 %10, %3
  %or.cond = select i1 %.not, i1 true, i1 %11
  %12 = add i64 %4, 1200
  %13 = icmp ugt i64 %3, %12
  %or.cond291 = select i1 %or.cond, i1 true, i1 %13
  %14 = add i64 %4, 60
  %15 = icmp ugt i64 %14, %3
  %or.cond293 = select i1 %or.cond291, i1 true, i1 %15
  %16 = add i64 %4, 42
  %17 = icmp ugt i64 %16, %3
  %or.cond295 = select i1 %or.cond293, i1 true, i1 %17
  br i1 %or.cond295, label %bb_inst_257, label %bb_inst_22

bb_inst_22:                                       ; preds = %bb_inst_6, %bb_inst_22
  %r7.0 = phi i64 [ %22, %bb_inst_22 ], [ 0, %bb_inst_6 ]
  %r1.0 = phi i64 [ %23, %bb_inst_22 ], [ 0, %bb_inst_6 ]
  %18 = add i64 %r1.0, %4
  %19 = inttoptr i64 %18 to ptr
  %20 = load i8, ptr %19, align 1
  %21 = zext i8 %20 to i64
  %22 = add i64 %r7.0, %21
  %23 = add nuw nsw i64 %r1.0, 1
  %.not287 = icmp eq i64 %23, 60
  br i1 %.not287, label %bb_inst_28, label %bb_inst_22

bb_inst_28:                                       ; preds = %bb_inst_22
  %24 = add i64 %22, 1640531535
  %25 = add i64 %22, -2048144777
  %26 = add i64 %22, 606290984
  %27 = zext i16 %9 to i64
  %28 = getelementptr i8, ptr %7, i64 1
  %29 = load i8, ptr %28, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 8
  %32 = load i8, ptr %7, align 1
  %33 = zext i8 %32 to i64
  %34 = or i64 %31, %33
  %35 = getelementptr i8, ptr %7, i64 5
  %36 = load i8, ptr %35, align 1
  %37 = zext i8 %36 to i64
  %38 = shl nuw nsw i64 %37, 8
  %39 = getelementptr i8, ptr %7, i64 4
  %40 = load i8, ptr %39, align 1
  %41 = zext i8 %40 to i64
  %42 = or i64 %38, %41
  %43 = getelementptr i8, ptr %7, i64 2
  %44 = load i8, ptr %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %34, %46
  %48 = getelementptr i8, ptr %7, i64 14
  %49 = load i8, ptr %48, align 1
  %50 = zext i8 %49 to i64
  %51 = shl nuw nsw i64 %50, 16
  %52 = or i64 %51, %27
  %53 = getelementptr i8, ptr %7, i64 9
  %54 = load i8, ptr %53, align 1
  %55 = zext i8 %54 to i64
  %56 = shl nuw nsw i64 %55, 8
  %57 = getelementptr i8, ptr %7, i64 8
  %58 = load i8, ptr %57, align 1
  %59 = zext i8 %58 to i64
  %60 = or i64 %56, %59
  %61 = getelementptr i8, ptr %7, i64 10
  %62 = load i8, ptr %61, align 1
  %63 = zext i8 %62 to i64
  %64 = shl nuw nsw i64 %63, 16
  %65 = or i64 %60, %64
  %66 = getelementptr i8, ptr %7, i64 11
  %67 = load i8, ptr %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 24
  %70 = or i64 %65, %69
  %71 = getelementptr i8, ptr %7, i64 15
  %72 = load i8, ptr %71, align 1
  %73 = zext i8 %72 to i64
  %74 = shl nuw nsw i64 %73, 24
  %75 = or i64 %52, %74
  %76 = getelementptr i8, ptr %7, i64 3
  %77 = load i8, ptr %76, align 1
  %78 = zext i8 %77 to i64
  %79 = shl nuw nsw i64 %78, 24
  %80 = or i64 %47, %79
  %81 = getelementptr i8, ptr %7, i64 6
  %82 = load i8, ptr %81, align 1
  %83 = zext i8 %82 to i64
  %84 = shl nuw nsw i64 %83, 16
  %85 = or i64 %42, %84
  %86 = getelementptr i8, ptr %7, i64 7
  %87 = load i8, ptr %86, align 1
  %88 = zext i8 %87 to i64
  %89 = shl nuw nsw i64 %88, 24
  %90 = or i64 %85, %89
  %91 = mul nsw i64 %90, -2048144777
  %92 = add i64 %91, %25
  %93 = mul nsw i64 %80, -2048144777
  %94 = add i64 %93, %26
  %95 = mul nsw i64 %75, -2048144777
  %96 = add i64 %95, %24
  %97 = mul nsw i64 %70, -2048144777
  %98 = add i64 %97, %22
  %99 = shl i64 %94, 13
  %100 = lshr i64 %94, 19
  %101 = and i64 %100, 8191
  %102 = or i64 %101, %99
  %103 = shl i64 %92, 13
  %104 = lshr i64 %92, 19
  %105 = and i64 %104, 8191
  %106 = or i64 %105, %103
  %107 = shl i64 %98, 13
  %108 = lshr i64 %98, 19
  %109 = and i64 %108, 8191
  %110 = or i64 %109, %107
  %111 = shl i64 %96, 13
  %112 = lshr i64 %96, 19
  %113 = and i64 %112, 8191
  %114 = or i64 %113, %111
  %115 = add i64 %4, 16
  %116 = mul i64 %114, -1640531535
  %117 = mul i64 %110, -1640531535
  %118 = mul i64 %106, -1640531535
  %119 = mul i64 %102, -1640531535
  %120 = inttoptr i64 %115 to ptr
  %121 = getelementptr i8, ptr %120, i64 13
  %122 = load i8, ptr %121, align 1
  %123 = zext i8 %122 to i64
  %124 = shl nuw nsw i64 %123, 8
  %125 = getelementptr i8, ptr %120, i64 12
  %126 = load i8, ptr %125, align 1
  %127 = zext i8 %126 to i64
  %128 = or i64 %124, %127
  %129 = getelementptr i8, ptr %120, i64 1
  %130 = load i8, ptr %129, align 1
  %131 = zext i8 %130 to i64
  %132 = shl nuw nsw i64 %131, 8
  %133 = load i8, ptr %120, align 1
  %134 = zext i8 %133 to i64
  %135 = or i64 %132, %134
  %136 = getelementptr i8, ptr %120, i64 5
  %137 = load i8, ptr %136, align 1
  %138 = zext i8 %137 to i64
  %139 = shl nuw nsw i64 %138, 8
  %140 = getelementptr i8, ptr %120, i64 4
  %141 = load i8, ptr %140, align 1
  %142 = zext i8 %141 to i64
  %143 = or i64 %139, %142
  %144 = getelementptr i8, ptr %120, i64 2
  %145 = load i8, ptr %144, align 1
  %146 = zext i8 %145 to i64
  %147 = shl nuw nsw i64 %146, 16
  %148 = or i64 %135, %147
  %149 = getelementptr i8, ptr %120, i64 14
  %150 = load i8, ptr %149, align 1
  %151 = zext i8 %150 to i64
  %152 = shl nuw nsw i64 %151, 16
  %153 = or i64 %128, %152
  %154 = getelementptr i8, ptr %120, i64 9
  %155 = load i8, ptr %154, align 1
  %156 = zext i8 %155 to i64
  %157 = shl nuw nsw i64 %156, 8
  %158 = getelementptr i8, ptr %120, i64 8
  %159 = load i8, ptr %158, align 1
  %160 = zext i8 %159 to i64
  %161 = or i64 %157, %160
  %162 = getelementptr i8, ptr %120, i64 10
  %163 = load i8, ptr %162, align 1
  %164 = zext i8 %163 to i64
  %165 = shl nuw nsw i64 %164, 16
  %166 = or i64 %161, %165
  %167 = getelementptr i8, ptr %120, i64 11
  %168 = load i8, ptr %167, align 1
  %169 = zext i8 %168 to i64
  %170 = shl nuw nsw i64 %169, 24
  %171 = or i64 %166, %170
  %172 = getelementptr i8, ptr %120, i64 15
  %173 = load i8, ptr %172, align 1
  %174 = zext i8 %173 to i64
  %175 = shl nuw nsw i64 %174, 24
  %176 = or i64 %153, %175
  %177 = getelementptr i8, ptr %120, i64 3
  %178 = load i8, ptr %177, align 1
  %179 = zext i8 %178 to i64
  %180 = shl nuw nsw i64 %179, 24
  %181 = or i64 %148, %180
  %182 = getelementptr i8, ptr %120, i64 6
  %183 = load <2 x i8>, ptr %182, align 1
  %184 = zext <2 x i8> %183 to <2 x i64>
  %185 = shl nuw nsw <2 x i64> %184, <i64 16, i64 24>
  %186 = extractelement <2 x i64> %185, i64 0
  %187 = or i64 %143, %186
  %188 = extractelement <2 x i64> %185, i64 1
  %189 = or i64 %187, %188
  %190 = mul nsw i64 %189, -2048144777
  %191 = add i64 %190, %118
  %192 = mul nsw i64 %181, -2048144777
  %193 = add i64 %192, %119
  %194 = mul nsw i64 %171, -2048144777
  %195 = add i64 %194, %117
  %196 = shl i64 %191, 13
  %197 = lshr i64 %191, 19
  %198 = and i64 %197, 8191
  %199 = or i64 %198, %196
  %200 = shl i64 %195, 13
  %201 = lshr i64 %195, 19
  %202 = and i64 %201, 8191
  %203 = or i64 %202, %200
  %204 = add i64 %4, 32
  %205 = inttoptr i64 %204 to ptr
  %206 = getelementptr i8, ptr %205, i64 1
  %207 = load i8, ptr %206, align 1
  %208 = zext i8 %207 to i64
  %209 = insertelement <2 x i64> poison, i64 %176, i64 0
  %210 = insertelement <2 x i64> %209, i64 %208, i64 1
  %211 = mul <2 x i64> %210, <i64 -2048144777, i64 256>
  %212 = load i8, ptr %205, align 1
  %213 = zext i8 %212 to i64
  %214 = insertelement <2 x i64> poison, i64 %116, i64 0
  %215 = insertelement <2 x i64> %214, i64 %213, i64 1
  %216 = add <2 x i64> %211, %215
  %217 = or <2 x i64> %211, %215
  %218 = shufflevector <2 x i64> %216, <2 x i64> %217, <2 x i32> <i32 0, i32 3>
  %219 = extractelement <2 x i64> %216, i64 0
  %220 = lshr i64 %219, 19
  %221 = mul i64 %203, -1640531535
  %222 = mul i64 %199, -1640531535
  %223 = getelementptr i8, ptr %205, i64 13
  %224 = load i8, ptr %223, align 1
  %225 = zext i8 %224 to i64
  %226 = shl nuw nsw i64 %225, 8
  %227 = getelementptr i8, ptr %205, i64 12
  %228 = load i8, ptr %227, align 1
  %229 = zext i8 %228 to i64
  %230 = or i64 %226, %229
  %231 = getelementptr i8, ptr %205, i64 5
  %232 = load i8, ptr %231, align 1
  %233 = zext i8 %232 to i64
  %234 = shl nuw nsw i64 %233, 8
  %235 = getelementptr i8, ptr %205, i64 4
  %236 = load i8, ptr %235, align 1
  %237 = zext i8 %236 to i64
  %238 = or i64 %234, %237
  %239 = getelementptr i8, ptr %205, i64 2
  %240 = load i8, ptr %239, align 1
  %241 = zext i8 %240 to i64
  %242 = shl nuw nsw i64 %241, 16
  %243 = insertelement <2 x i64> <i64 13, i64 poison>, i64 %242, i64 1
  %244 = shl <2 x i64> %218, %243
  %245 = or <2 x i64> %218, %243
  %246 = shufflevector <2 x i64> %244, <2 x i64> %245, <2 x i32> <i32 0, i32 3>
  %247 = getelementptr i8, ptr %205, i64 14
  %248 = load i8, ptr %247, align 1
  %249 = zext i8 %248 to i64
  %250 = insertelement <2 x i64> poison, i64 %249, i64 0
  %251 = insertelement <2 x i64> %250, i64 %193, i64 1
  %252 = shl nuw nsw <2 x i64> %251, <i64 16, i64 19>
  %253 = lshr <2 x i64> %251, <i64 16, i64 19>
  %254 = shufflevector <2 x i64> %252, <2 x i64> %253, <2 x i32> <i32 0, i32 3>
  %255 = insertelement <2 x i64> <i64 poison, i64 8191>, i64 %230, i64 0
  %256 = or <2 x i64> %254, %255
  %257 = and <2 x i64> %254, %255
  %258 = shufflevector <2 x i64> %256, <2 x i64> %257, <2 x i32> <i32 0, i32 3>
  %259 = getelementptr i8, ptr %205, i64 9
  %260 = load i8, ptr %259, align 1
  %261 = zext i8 %260 to i64
  %262 = shl nuw nsw i64 %261, 8
  %263 = getelementptr i8, ptr %205, i64 8
  %264 = load i8, ptr %263, align 1
  %265 = zext i8 %264 to i64
  %266 = or i64 %262, %265
  %267 = getelementptr i8, ptr %205, i64 10
  %268 = load i8, ptr %267, align 1
  %269 = zext i8 %268 to i64
  %270 = shl nuw nsw i64 %269, 16
  %271 = or i64 %266, %270
  %272 = getelementptr i8, ptr %205, i64 11
  %273 = load i8, ptr %272, align 1
  %274 = zext i8 %273 to i64
  %275 = shl nuw nsw i64 %274, 24
  %276 = or i64 %271, %275
  %277 = getelementptr i8, ptr %205, i64 15
  %278 = load i8, ptr %277, align 1
  %279 = zext i8 %278 to i64
  %280 = insertelement <2 x i64> poison, i64 %279, i64 0
  %281 = insertelement <2 x i64> %280, i64 %193, i64 1
  %282 = shl <2 x i64> %281, <i64 24, i64 13>
  %283 = or <2 x i64> %258, %282
  %284 = getelementptr i8, ptr %205, i64 3
  %285 = load i8, ptr %284, align 1
  %286 = zext i8 %285 to i64
  %287 = insertelement <2 x i64> poison, i64 %220, i64 0
  %288 = insertelement <2 x i64> %287, i64 %286, i64 1
  %289 = and <2 x i64> %288, <i64 8191, i64 poison>
  %290 = shl nuw nsw <2 x i64> %288, <i64 8191, i64 24>
  %291 = shufflevector <2 x i64> %289, <2 x i64> %290, <2 x i32> <i32 0, i32 3>
  %292 = or <2 x i64> %291, %246
  %293 = getelementptr i8, ptr %205, i64 6
  %294 = load <2 x i8>, ptr %293, align 1
  %295 = zext <2 x i8> %294 to <2 x i64>
  %296 = shl nuw nsw <2 x i64> %295, <i64 16, i64 24>
  %297 = extractelement <2 x i64> %296, i64 0
  %298 = or i64 %238, %297
  %299 = extractelement <2 x i64> %296, i64 1
  %300 = or i64 %298, %299
  %301 = mul nsw i64 %300, -2048144777
  %302 = add i64 %301, %222
  %303 = mul <2 x i64> %292, <i64 -1640531535, i64 -2048144777>
  %304 = mul <2 x i64> %283, <i64 -2048144777, i64 -1640531535>
  %305 = add <2 x i64> %303, %304
  %306 = mul nsw i64 %276, -2048144777
  %307 = add i64 %306, %221
  %308 = shl i64 %302, 13
  %309 = lshr i64 %302, 19
  %310 = and i64 %309, 8191
  %311 = or i64 %310, %308
  %312 = shl i64 %307, 13
  %313 = lshr i64 %307, 19
  %314 = and i64 %313, 8191
  %315 = or i64 %314, %312
  %316 = shl <2 x i64> %305, <i64 13, i64 13>
  %317 = lshr <2 x i64> %305, <i64 19, i64 19>
  %318 = and <2 x i64> %317, <i64 8191, i64 8191>
  %319 = or <2 x i64> %318, %316
  %320 = mul i64 %315, -1640531535
  %321 = mul i64 %311, -1640531535
  %322 = mul <2 x i64> %319, <i64 -1640531535, i64 -1640531535>
  %323 = lshr i64 %321, 25
  %324 = and i64 %323, 127
  %325 = mul i64 %311, -209988036480
  %326 = extractelement <2 x i64> %319, i64 1
  %327 = mul i64 %326, -3281063070
  %328 = lshr i64 %320, 20
  %329 = and i64 %328, 4095
  %330 = mul i64 %315, -6719617167360
  %331 = lshr <2 x i64> %322, <i64 14, i64 31>
  %332 = and <2 x i64> %331, <i64 262143, i64 1>
  %333 = extractelement <2 x i64> %319, i64 0
  %334 = mul i64 %333, -430055498711040
  %335 = add i64 %4, 48
  %336 = or i64 %330, 60
  %337 = add i64 %336, %334
  %338 = add i64 %337, %329
  %339 = add i64 %338, %327
  %340 = extractelement <2 x i64> %332, i64 0
  %341 = add i64 %339, %340
  %342 = extractelement <2 x i64> %332, i64 1
  %343 = add i64 %341, %342
  %344 = add i64 %343, %325
  %345 = add i64 %344, %324
  br label %bb_inst_161

bb_inst_161:                                      ; preds = %bb_inst_186, %bb_inst_28
  %r4.0 = phi i64 [ %335, %bb_inst_28 ], [ %372, %bb_inst_186 ]
  %r1.2 = phi i64 [ %345, %bb_inst_28 ], [ %r3.0, %bb_inst_186 ]
  %r0.1 = phi i64 [ 12, %bb_inst_28 ], [ %371, %bb_inst_186 ]
  %346 = and i64 %r0.1, 4294967295
  %347 = icmp ult i64 %346, 4
  br i1 %347, label %bb_inst_191, label %bb_inst_165

bb_inst_165:                                      ; preds = %bb_inst_161
  %348 = inttoptr i64 %r4.0 to ptr
  %349 = getelementptr i8, ptr %348, i64 1
  %350 = load i8, ptr %349, align 1
  %351 = zext i8 %350 to i64
  %352 = shl nuw nsw i64 %351, 8
  %353 = load i8, ptr %348, align 1
  %354 = zext i8 %353 to i64
  %355 = or i64 %352, %354
  %356 = getelementptr i8, ptr %348, i64 2
  %357 = load <2 x i8>, ptr %356, align 1
  %358 = zext <2 x i8> %357 to <2 x i64>
  %359 = shl nuw nsw <2 x i64> %358, <i64 16, i64 24>
  %360 = extractelement <2 x i64> %359, i64 0
  %361 = or i64 %355, %360
  %362 = extractelement <2 x i64> %359, i64 1
  %363 = or i64 %361, %362
  %364 = mul nsw i64 %363, -1028477379
  %365 = add i64 %364, %r1.2
  %366 = shl i64 %365, 17
  %367 = lshr i64 %365, 15
  %368 = and i64 %367, 131071
  %369 = or i64 %368, %366
  %370 = mul i64 %369, 668265263
  br label %bb_inst_186

bb_inst_186:                                      ; preds = %bb_inst_192, %bb_inst_165
  %r3.0 = phi i64 [ %383, %bb_inst_192 ], [ %370, %bb_inst_165 ]
  %r7.2 = phi i64 [ 4294967295, %bb_inst_192 ], [ 4294967292, %bb_inst_165 ]
  %r8.1 = phi i64 [ 1, %bb_inst_192 ], [ 4, %bb_inst_165 ]
  %371 = add i64 %r7.2, %r0.1
  %372 = add i64 %r8.1, %r4.0
  br label %bb_inst_161

bb_inst_191:                                      ; preds = %bb_inst_161
  %373 = icmp eq i64 %346, 0
  br i1 %373, label %bb_inst_205, label %bb_inst_192

bb_inst_192:                                      ; preds = %bb_inst_191
  %374 = inttoptr i64 %r4.0 to ptr
  %375 = load i8, ptr %374, align 1
  %376 = zext i8 %375 to i64
  %377 = mul nuw nsw i64 %376, 374761393
  %378 = add i64 %377, %r1.2
  %379 = shl i64 %378, 11
  %380 = lshr i64 %378, 21
  %381 = and i64 %380, 2047
  %382 = or i64 %381, %379
  %383 = mul i64 %382, -1640531535
  br label %bb_inst_186

bb_inst_205:                                      ; preds = %bb_inst_191
  %384 = lshr i64 %r1.2, 15
  %385 = and i64 %384, 131071
  %386 = xor i64 %385, %r1.2
  %387 = mul i64 %386, -2048144777
  %388 = lshr i64 %387, 13
  %389 = and i64 %388, 524287
  %390 = xor i64 %389, %387
  %391 = lshr i64 %22, 24
  %392 = trunc i64 %391 to i8
  %393 = getelementptr i8, ptr %7, i64 37
  store i8 %392, ptr %393, align 1
  %394 = lshr i64 %22, 16
  %395 = trunc i64 %394 to i8
  %396 = getelementptr i8, ptr %7, i64 36
  store i8 %395, ptr %396, align 1
  %397 = trunc i64 %22 to i8
  %398 = getelementptr i8, ptr %7, i64 34
  store i8 %397, ptr %398, align 1
  %399 = lshr i64 %22, 8
  %400 = trunc i64 %399 to i8
  %401 = getelementptr i8, ptr %7, i64 35
  store i8 %400, ptr %401, align 1
  %402 = load i16, ptr %7, align 2
  %403 = load i16, ptr %81, align 2
  store i16 %403, ptr %7, align 2
  %404 = load i16, ptr %43, align 2
  %405 = load i16, ptr %57, align 2
  store i16 %405, ptr %43, align 2
  %406 = load i16, ptr %39, align 2
  %407 = load i16, ptr %61, align 2
  store i16 %407, ptr %39, align 2
  store i16 %402, ptr %81, align 2
  store i16 %404, ptr %57, align 2
  store i16 %406, ptr %61, align 2
  %408 = mul i64 %390, -1028477379
  %409 = lshr i64 %408, 24
  %410 = trunc i64 %409 to i8
  %411 = getelementptr i8, ptr %7, i64 41
  store i8 %410, ptr %411, align 1
  %412 = lshr i64 %408, 16
  %413 = trunc i64 %412 to i8
  %414 = getelementptr i8, ptr %7, i64 40
  store i8 %413, ptr %414, align 1
  %415 = and i64 %412, 65535
  %416 = xor i64 %415, %408
  %417 = trunc i64 %416 to i8
  %418 = getelementptr i8, ptr %7, i64 38
  store i8 %417, ptr %418, align 1
  %419 = lshr i64 %416, 8
  %420 = trunc i64 %419 to i8
  %421 = getelementptr i8, ptr %7, i64 39
  store i8 %420, ptr %421, align 1
  br label %bb_inst_257

bb_inst_257:                                      ; preds = %bb_inst_205, %bb_inst_6, %setupBlock
  %r0.2 = phi i64 [ 2, %setupBlock ], [ 2, %bb_inst_6 ], [ 3, %bb_inst_205 ]
  ret i64 %r0.2
}

attributes #0 = { nofree norecurse nosync nounwind }
